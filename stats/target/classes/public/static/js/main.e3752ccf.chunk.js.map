{"version":3,"sources":["stats/statsDuck.js","auth/authDuck.js","app/reducers.js","app/store.js","app/Header.js","stats/StatsPage.js","app/NotFound.js","app/App.js","serviceWorker.js","index.js","assets/logo.svg","assets/404.png"],"names":["initialState","orderCount","avgCart","STATS_LOADED","fetchOrderStats","dispatch","axios","get","then","response","type","payload","data","performLogout","post","finally","window","location","replace","appReducer","combineReducers","stats","state","arguments","length","undefined","action","Object","objectSpread","nbOrder","avgPrice","auth","rootReducer","configureStore","createStore","compose","applyMiddleware","thunk","rotate360","keyframes","_templateObject","TopBar","styled","div","_templateObject2","Title","_templateObject3","connect","bindActionCreators","_ref","react_default","a","createElement","react","src","logo","className","alt","Nav","variant","Item","Link","href","lib","to","eventKey","onClick","OrdersPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasFetchStats","_this2","setState","_this$props","Row","style","marginTop","Col","md","Card","width","Header","Body","xs","lg","React","Component","NotFound","PageNotFound","height","display","margin","position","store","App","es","rel","integrity","crossOrigin","BrowserRouter","app_Header","Switch","Route","path","component","StatsPage","Boolean","hostname","match","defaults","baseURL","withCredentials","xsrfHeaderName","xsrfCookieName","paramsSerializer","params","queryString","stringify","arrayFormat","ReactDOM","render","src_app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e3752ccf.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst initialState = {\n  orderCount: 0,\n  avgCart: 0,\n};\n\nconst STATS_LOADED = 'ORDERS_LOADED';\n\nexport default function stats(state = initialState, action) {\n  switch (action.type) {\n    case STATS_LOADED:\n      return {\n        ...state,\n        orderCount: action.payload.nbOrder,\n        avgCart: action.payload.avgPrice,\n      };\n\n    default:\n      return state\n  }\n}\n\nexport function fetchOrderStats() {\n  return dispatch =>\n    axios\n      .get(\"/stats/internal/orders\")\n      .then(response => {\n        return dispatch({\n          type: STATS_LOADED,\n          payload: response.data,\n        });\n      }\n      );\n}\n","import axios from 'axios';\n\nexport default function auth(state = {}, action) {\n    return state\n}\n\nexport function performLogout(){\n  return () =>\n    axios\n        .post(\"http://localhost:8080/perform_logout\")\n        .finally( () =>  window.location.replace(\"http://localhost:8080/login\"));\n}\n","import {combineReducers} from 'redux';\nimport stats from \"../stats/statsDuck\";\nimport auth from \"../auth/authDuck\";\n\nconst appReducer = combineReducers({\n  stats,\n  auth,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'SUCCESS_LOGOUT') {\n    state = undefined\n  }\n\n  return appReducer(state, action)\n};\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst configureStore = () => {\n  const store = createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(thunk),\n    )\n  );\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./reducers', () => {\n      store.replaceReducer(rootReducer)\n    })\n  }\n\n  return store\n};\n\nexport default configureStore\n","import React, {Fragment} from 'react'\nimport logo from '../assets/logo.svg'\nimport styled from '@emotion/styled'\nimport {keyframes} from '@emotion/core'\nimport {Nav} from 'react-bootstrap';\nimport {connect} from \"react-redux\";\nimport {LinkContainer} from 'react-router-bootstrap';\nimport {bindActionCreators} from \"redux\";\nimport {performLogout} from \"../auth/authDuck\";\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst TopBar = styled.div`\n  background-color: #222;\n  height: 120px;\n  padding: 20px;\n  color: #fff;\n  display: flex;\n  flex-direction: row;\n\n  .redux-logo {\n    animation: ${rotate360} infinite 20s linear;\n    height: 80px;\n  }\n`;\n\nconst Title = styled.div`\n  background-color: #222;\n  padding: 20px;\n  font-size: 2em;\n  color: #fff;\n`;\n\nconst Header = ({performLogout}) => (\n  <Fragment>\n    <TopBar>\n      <img src={logo} className=\"redux-logo\" alt=\"logo\" />\n      <Title>HOMicS: Market Place Project</Title>\n    </TopBar>\n        <Nav variant=\"tabs\">\n          <Nav.Item>\n            <Nav.Link href=\"/mono/articles\">Articles</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/mono/cart\">Cart</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/mono/history\">History</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <LinkContainer to={\"/stats/stat-order\"} >\n              <Nav.Link eventKey={5}>\n                      Stats micro\n              </Nav.Link>\n            </LinkContainer>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/user/userActivity\">User Activity micro</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link onClick={performLogout}>Logout</Nav.Link>\n          </Nav.Item>\n        </Nav>\n    </Fragment>\n);\n\n\nconst mapDispatchToProps = dispatch => {\n    return bindActionCreators(\n        {\n            performLogout,\n        },\n        dispatch\n    )\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps,\n)(Header)\n","import React from 'react'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { fetchOrderStats } from \"../stats/statsDuck\";\nimport { Row, Col, Card } from 'react-bootstrap';\n\nclass OrdersPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasFetchStats: false };\n  }\n\n  componentDidMount() {\n    this.props.fetchOrderStats().then(() =>\n      this.setState({ hasFetchStats: true })\n    );\n  }\n\n  render() {\n    const { orderCount, avgCart } = this.props;\n    const { hasFetchStats } = this.state;\n\n    return (\n      <div>\n        {hasFetchStats && (\n          <Row className=\"justify-content-md-center\" style={{  marginTop: '1rem'}}>\n            <Col md=\"auto\">\n              <Card style={{ width: '18rem' }}>\n                <Card.Header>Number of orders</Card.Header>\n                <Card.Body>\n                  <Card.Title>{orderCount}</Card.Title>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col xs lg=\"1\"/>\n            <Col md=\"auto\">\n              <Card style={{ width: '18rem' }}>\n                <Card.Header>Average cart price</Card.Header>\n                <Card.Body>\n                  <Card.Title>{avgCart}€</Card.Title>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        )}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    orderCount: state.stats.orderCount,\n    avgCart: state.stats.avgCart,\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      fetchOrderStats,\n    },\n    dispatch\n  )\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(OrdersPage)\n","import React from 'react';\nimport PageNotFound from '../assets/404.png';\n\nconst NotFound = () => (\n    <div>\n        <img alt=\"404\" src={PageNotFound} style={{width: 400, height: 400, display: 'block', margin: 'auto', position: 'relative' }} />\n    </div>\n);\n\nexport default NotFound\n","import React, {Component} from 'react';\nimport './App.css';\n\nimport {Provider} from 'react-redux';\nimport configureStore from './store';\nimport Header from \"./Header\";\nimport StatsPage from '../stats/StatsPage';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport NotFound from \"./NotFound\";\n\nconst store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\"\n          integrity=\"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS\"\n          crossOrigin=\"anonymous\"\n        />\n        <Router>\n          <div>\n            <Header />\n            <Switch>\n                <Route path=\"/stats/stat-order\" component={StatsPage} />\n                <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\n// Axios configuration\naxios.defaults.baseURL = 'http://localhost:8080/';\n\n/* eslint-disable no-undef */\n/* eslint-disable quotes */\naxios.defaults.withCredentials = true;\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.paramsSerializer = function(params) {\n  return queryString.stringify(params, { arrayFormat: 'brackets' });\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5ae1af16.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.e71f3240.png\";"],"sourceRoot":""}