{"version":3,"sources":["auth/authDuck.js","app/reducers.js","app/store.js","app/Header.js","auth/FormLogin.js","auth/LoginPage.js","app/NotFound.js","app/PrivateRoute.js","app/App.js","serviceWorker.js","index.js","assets/logo.svg","assets/404.png"],"names":["initialState","isLogged","SUCCESS_LOGIN","SUCCESS_LOGOUT","performLogin","account","config","headers","Content-Type","params","URLSearchParams","append","username","password","dispatch","axios","post","then","type","catch","error","response","data","message","toast","performLogout","finally","getCurrentUser","get","appReducer","combineReducers","auth","state","arguments","length","undefined","Object","objectSpread","rootReducer","action","configureStore","createStore","compose","applyMiddleware","thunk","rotate360","keyframes","_templateObject","TopBar","styled","div","_templateObject2","Title","_templateObject3","connect","bindActionCreators","_ref","react_default","a","createElement","react","src","logo","className","alt","Nav","variant","Item","Link","href","onClick","FormLogin","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","id","value","handleSubmit","values","preventDefault","email","window","location","replace","onSubmit","FormGroup","controlId","FormLabel","FormControl","autoFocus","onChange","required","Button","block","disabled","validateForm","React","Component","withRouter","LoginPage","Row","Col","xs","auth_FormLogin","NotFound","PageNotFound","style","width","height","display","margin","position","PrivateRoute","hasFetchCurrentUser","_this2","_this$props","component","rest","objectWithoutProperties","Route","assign","render","Redirect","to","pathname","from","store","App","es","rel","integrity","crossOrigin","lib","autoClose","BrowserRouter","app_Header","Switch","path","app_PrivateRoute","Boolean","hostname","match","defaults","baseURL","withCredentials","xsrfHeaderName","xsrfCookieName","paramsSerializer","queryString","stringify","arrayFormat","ReactDOM","src_app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.945a5e22.chunk.js","sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst initialState = {\n  isLogged: false,\n};\nconst SUCCESS_LOGIN = 'SUCCESS_LOGIN';\nconst SUCCESS_LOGOUT = 'SUCCESS_LOGOUT';\n\nexport default function auth(state = initialState, action) {\n  switch (action.type) {\n  case SUCCESS_LOGIN:\n    return {...state, isLogged: true};\n  default:\n    return state\n  }\n}\n\nexport function performLogin(account) {\n  const config = {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n  };\n\n  const params = new URLSearchParams();\n  params.append(\"username\",account.username);\n  params.append(\"password\", account.password);\n  return dispatch =>\n    axios\n      .post(\"http://localhost:8080/perform_login\", params, config)\n      .then( () =>  {\n        return dispatch({type: SUCCESS_LOGIN});\n      })\n      .catch( error => {\n        if (error && error.response && error.response.data && error.response.data.message) {\n          toast.error(error.response.data.message)\n        }\n      });\n}\n\nexport function performLogout(){\n  return dispatch =>\n    axios\n      .post(\"http://localhost:8080/perform_logout\")\n      .finally( () =>  {\n        return dispatch({type: SUCCESS_LOGOUT});\n      });\n}\n\nexport function getCurrentUser(){\n  return dispatch =>\n    axios\n      .get(\"/internal/user/current\")\n      .then( () =>  {\n        return dispatch({type: SUCCESS_LOGIN});\n      });\n}\n","import {combineReducers} from 'redux';\nimport auth from \"../auth/authDuck\";\n\nconst appReducer = combineReducers({\n  auth,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'SUCCESS_LOGOUT') {\n    state = undefined\n  }\n\n  return appReducer(state, action)\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst configureStore = () => {\n  const store = createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(thunk),\n    )\n  );\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./reducers', () => {\n      store.replaceReducer(rootReducer)\n    })\n  }\n\n  return store\n};\n\nexport default configureStore\n","import React, {Fragment} from 'react'\nimport logo from '../assets/logo.svg'\nimport styled from '@emotion/styled'\nimport {keyframes} from '@emotion/core'\nimport {Nav} from 'react-bootstrap';\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {LinkContainer} from 'react-router-bootstrap';\nimport {performLogout} from \"../auth/authDuck\";\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst TopBar = styled.div`\n  background-color: #222;\n  height: 120px;\n  padding: 20px;\n  color: #fff;\n  display: flex;\n  flex-direction: row;\n\n  .redux-logo {\n    animation: ${rotate360} infinite 20s linear;\n    height: 80px;\n  }\n`;\n\nconst Title = styled.div`\n  background-color: #222;\n  padding: 20px;\n  font-size: 2em;\n  color: #fff;\n`;\n\nconst Header = ({isLogged, performLogout}) => (\n  <Fragment>\n    <TopBar>\n      <img src={logo} className=\"redux-logo\" alt=\"logo\" />\n      <Title>HOMicS: Market Place Project</Title>\n    </TopBar>\n    {isLogged &&\n      <Nav variant=\"tabs\">\n        <Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/mono/articles\">Articles</Nav.Link>\n          </Nav.Item>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/mono/cart\">Cart</Nav.Link>\n          </Nav.Item>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/mono/History\">History</Nav.Link>\n          </Nav.Item>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/stats/stat-order\">Stats micro</Nav.Link>\n          </Nav.Item>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/user/userActivity\">User Activity micro</Nav.Link>\n          </Nav.Item>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link onClick={performLogout}>Logout</Nav.Link>\n        </Nav.Item>\n      </Nav>\n    }\n  </Fragment>\n);\n\nconst mapStateToProps = state => ({isLogged: state.auth.isLogged});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      performLogout,\n    },\n    dispatch\n  )\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Header)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {bindActionCreators, compose} from 'redux'\nimport { connect } from 'react-redux'\n\nimport { Button, FormGroup, FormControl, FormLabel } from 'react-bootstrap';\nimport { performLogin } from './authDuck';\nimport {withRouter} from \"react-router-dom\";\n\nclass FormLogin extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  validateForm() {\n    return this.state.email.length > 0 && this.state.password.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  };\n\n  handleSubmit = values => {\n    const { performLogin} = this.props;\n    values.preventDefault();\n    const account = {\n      username: this.state.email,\n      password: this.state.password\n    };\n    performLogin(account)\n        .then( () => window.location.replace('/mono/articles'));\n  };\n\n\n  render(){\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <FormGroup controlId=\"email\">\n          <FormLabel>Email</FormLabel>\n          <FormControl\n            autoFocus\n            value={this.state.email}\n            onChange={this.handleChange}\n            required=\"required\"\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\">\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            value={this.state.password}\n            onChange={this.handleChange}\n            type=\"password\"\n            required=\"required\"\n          />\n        </FormGroup>\n        <Button\n          block\n          disabled={!this.validateForm()}\n          type=\"submit\"\n        >\n          Login\n        </Button>\n      </form>\n    )\n  }\n\n}\n\nFormLogin.propTypes = {\n  performLogin: PropTypes.func.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      performLogin,\n    },\n    dispatch\n  )\n}\n\n\nexport default compose(\n    connect(\n      null,\n      mapDispatchToProps),\n    withRouter,\n)(FormLogin)\n","import React from 'react'\n\nimport FormLogin from \"./FormLogin\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst LoginPage = () => (\n  <section>\n    <Row className=\"justify-content-md-center\">\n      <Col xs={3} >\n        <h1>Login Gateway</h1>\n        <FormLogin/>\n      </Col>\n    </Row>\n  </section>\n);\n\nexport default LoginPage;\n","import React from 'react';\nimport PageNotFound from '../assets/404.png';\n\nconst NotFound = () => (\n  <div>\n    <img alt=\"404\" src={PageNotFound} style={{width: 400, height: 400, display: 'block', margin: 'auto', position: 'relative' }} />\n  </div>\n);\n\nexport default NotFound\n","import React from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {bindActionCreators, compose} from \"redux\";\nimport {getCurrentUser} from \"../auth/authDuck\";\n\nclass PrivateRoute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasFetchCurrentUser: false };\n  }\n\n  componentDidMount() {\n    if (!this.props.isLogged) {\n      this.props.getCurrentUser()\n        .finally(() => this.setState({ hasFetchCurrentUser: true }));\n    } else {\n      this.setState({ hasFetchCurrentUser: true });\n    }\n  }\n\n  render() {\n    const { component: Component, isLogged, ...rest }  = this.props;\n    const { hasFetchCurrentUser } = this.state;\n\n    return (\n      <div>\n        {hasFetchCurrentUser &&\n          <Route\n            {...rest}\n            render={props =>\n              isLogged ? (\n                <Component {...props} />\n              ) : (\n                <Redirect\n                  to={{\n                    pathname: \"/login\",\n                    state: {from: props.location}\n                  }}\n                />\n              )\n            }\n          />\n        }\n      </div>\n    )\n  }\n}\n\nPrivateRoute.propTypes = {\n  getCurrentUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({isLogged: state.auth.isLogged});\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      getCurrentUser\n    },\n    dispatch\n  )\n}\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(PrivateRoute)\n","import React, {Component} from 'react';\nimport './App.css';\n\nimport {Provider} from 'react-redux';\nimport configureStore from './store';\nimport {ToastContainer} from \"react-toastify\";\nimport Header from \"./Header\";\nimport LoginPage from \"../auth/LoginPage\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport NotFound from \"./NotFound\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\"\n          integrity=\"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS\"\n          crossOrigin=\"anonymous\"\n        />\n        <ToastContainer autoClose={5000} />\n        <Router>\n          <div>\n            <Header />\n            <Switch>\n              <Route path=\"/login\" component={LoginPage} />\n              <PrivateRoute component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\n// Axios configuration\naxios.defaults.baseURL = '/';\n\n/* eslint-disable no-undef */\n/* eslint-disable quotes */\naxios.defaults.withCredentials = true;\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.paramsSerializer = function(params) {\n  return queryString.stringify(params, { arrayFormat: 'brackets' });\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5ae1af16.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.e71f3240.png\";"],"sourceRoot":""}